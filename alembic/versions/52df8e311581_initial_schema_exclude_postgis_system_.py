"""Initial schema, exclude PostGIS system tables

Revision ID: 52df8e311581
Revises:
Create Date: 2025-07-09 12:19:44.534523

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = "52df8e311581"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "parcels_final",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "geometry",
            geoalchemy2.types.Geometry(
                geometry_type="MULTIPOLYGON",
                srid=4326,
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.Column("h3_index", sa.String(), nullable=True),
        sa.Column("attributes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("enriched", sa.Boolean(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "app_parcels_final_geometry_idx",
        "parcels_final",
        ["geometry"],
        unique=False,
        postgresql_using="gist",
    )
    op.create_table(
        "parcels_raw",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tile_id", sa.String(), nullable=False),
        sa.Column(
            "geometry",
            geoalchemy2.types.Geometry(
                geometry_type="MULTIPOLYGON",
                srid=4326,
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.Column("properties", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("ingested_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "app_parcels_raw_geometry_idx",
        "parcels_raw",
        ["geometry"],
        unique=False,
        postgresql_using="gist",
    )
    op.create_table(
        "tile_state",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tile_id", sa.String(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("error", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tile_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tile_state")
    op.drop_index(
        "app_parcels_raw_geometry_idx",
        table_name="parcels_raw",
        postgresql_using="gist",
    )
    op.drop_table("parcels_raw")
    op.drop_index(
        "app_parcels_final_geometry_idx",
        table_name="parcels_final",
        postgresql_using="gist",
    )
    op.drop_table("parcels_final")
    # ### end Alembic commands ###
